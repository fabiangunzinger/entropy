setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + i(generation, "Boomers"),
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
# notes = c(note),
# tex = T,
# fontsize = 'scriptsize',
# file=file.path(TABDIR, tabname),
# label = glue('tab:reg_compare'),
# replace = T
)
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept"),
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept"),
# notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
# Tables
tabname <- "reg_compare"
# Tables
tabname <- "reg_compare.tex"
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept"),
# notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
library(stargazer)
source('./helpers/helpers.R')
df = read_analysis_data()
stargazer(
df,
summary.stat = c('mean', 'sd', 'min', 'p25', 'median', 'p75', 'max'),
title = 'Summary statistics',
label = 'tab:sumstats',
font.size = 'tiny',
out = file.path(TABDIR, 'sumstats.tex')
)
tabname <- 'sumstats.tex'
stargazer(
df,
summary.stat = c('mean', 'sd', 'min', 'p25', 'median', 'p75', 'max'),
title = 'Summary statistics',
label = 'tab:sumstats',
font.size = 'scriptsize',
out = file.path(TABDIR, tabname)
)
stargazer(
df,
summary.stat = c('mean', 'sd', 'min', 'p25', 'median', 'p75', 'max'),
digits = 1,
title = 'Summary statistics',
label = 'tab:sumstats',
font.size = 'scriptsize',
out = file.path(TABDIR, tabname)
)
stargazer(
df,
summary.stat = c('mean', 'sd', 'min', 'p25', 'median', 'p75', 'max'),
digits = 1,
title = 'Summary statistics',
label = 'tab:sumstats',
font.size = 'footnotesize',
out = file.path(TABDIR, tabname)
)
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept"),
# notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
# Tables
tabname <- "reg_compare.tex"
etable(m_stat_pp, m_stat_ctrl, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept"),
# notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept"),
# notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, tabname),
label = glue('tab:reg_compare'),
replace = T
)
fcoefplot(m_stat_twfe)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
library(dplyr)
library(fixest)
library(gridExtra)
library(lubridate)
source('./helpers/helpers.R')
source('./helpers/fixest_settings.R')
df <- read_analysis_data() %>%
filter(between(tt, -6, 12)) %>%
mutate(treat = 1, month=month(ym(ymn), label = T))
setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + i(generation, "Boomers"),
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
# Simple pre-post comparison
figname <- 'reg_pre_post.png'
m_stat_pp <- feols(netflows ~ t, df)
m_dynam_pp <- feols(netflows ~ i(tt, 0), df)
# Adding FEs
figname <- 'reg_twfe.png'
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..fe, df)
etable(m_stat_twfe, m_dynam_twfe)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
etable(m_stat_twfe)
etable(m_dynam_twfe)
fiplot(m_dynam_twfe)
fcoefplot(m_stat_twfe)
setFixest_fml(
..controls = ~month_income + month_spend + discret_spend + is_female + age + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
setFixest_fml(
..controls = ~month_income + month_spend + discret_spend + is_female + age
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
setFixest_fml(
..controls = ~month_income + month_spend + discret_spend + is_female + age,
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
# Simple pre-post comparison
figname <- 'reg_pre_post.png'
m_stat_pp <- feols(netflows ~ t, df)
m_dynam_pp <- feols(netflows ~ i(tt, 0), df)
# Adding FEs
figname <- 'reg_twfe.png'
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
# Comparison plots
figname <- "reg_comparison.png"
fiplot(list(m_dynam_pp, m_dynam_ctrl, m_dynam_twfe))
fiplot(list(m_dynam_pp, m_dynam_twfe))
fcoefplot(list(m_stat_pp, m_stat_ctrl, m_stat_twfe), keep="App use")
fcoefplot(list(m_stat_pp, m_stat_twfe), keep="App use")
library(dplyr)
library(fixest)
library(gridExtra)
library(lubridate)
source('./helpers/helpers.R')
source('./helpers/fixest_settings.R')
df <- read_analysis_data() %>%
filter(between(tt, -6, 12)) %>%
mutate(treat = 1, month=month(ym(ymn), label = T))
setFixest_fml(
..controls = ~month_income + month_spend + discret_spend + is_female + age,
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
# Simple pre-post comparison
figname <- 'reg_pre_post.png'
m_stat_pp <- feols(netflows ~ t, df)
m_dynam_pp <- feols(netflows ~ i(tt, 0), df)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + age,
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
)
setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + i(generation, "Boomers"),
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
)
m_dynam_twfe_ext <-
feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
m_dynam_twfe_ext <-
feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = ..fe)
setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + i(generation, "Boomers"),
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = ..fe)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = [..fe])
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = ..fe)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = ~user_id + month)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = .[..fe])
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = 'cluster')
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = 'clustered')
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = 'twoway')
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df, vcov = ~user_id + month)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
)
setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + i(generation, "Boomers"),
# + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~sw0(user_id, month, user_id + month)
)
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
etable(m_stat_pp, m_stat_twfe,
title = 'Regression results',
order = c("App use", "!Intercept")
)
# Internal vs external margin
m_dynam_twfe_int <- feols(pos_netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
m_dynam_twfe_ext <- feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
fiplot(m_dynam_twfe_int)
fiplot(m_dynam_twfe_ext)
fiplot(m_dynam_twfe_ext)
fiplot(m_dynam_twfe_int)
fiplot(m_dynam_twfe_ext)
fiplot(m_dynam_twfe_int)
# Decompose net-inflows
m_dynam_twfe_net <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
m_dynam_twfe_in <- feols(inflows ~ i(tt, 0) + ..controls | ..mvfe, df)
m_dynam_twfe_out <- feols(outflows ~ i(tt, 0) + ..controls | ..mvfe, df)
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
m_dynam_twfe_out <- feols(outflows ~ i(tt, 0) + ..controls | ..mvfe, df)
m_dynam_twfe_in <- feols(inflows ~ i(tt, 0) + ..controls | ..mvfe, df)
# Decompose net-inflows
m_dynam_twfe_net <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
fiplot(m_dynam_twfe_net)
fiplot(m_dynam_twfe_in)
fiplot(m_dynam_twfe_out)
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
# Decompose net-inflows
m_dynam_twfe_net <- feols(netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_in <- feols(inflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_out <- feols(outflows ~ i(tt, 0) + ..controls | ..fe, df)
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
# Decompose internal vs external margin
m_dynam_twfe_int <- feols(pos_netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_ext <- feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_int
fiplot(m_dynam_twfe_int)
fiplot(m_dynam_twfe_ext)
fiplot(m_dynam_twfe_int)
fiplot(m_dynam_twfe_ext)
library(dplyr)
library(fixest)
library(gridExtra)
library(lubridate)
source('./helpers/helpers.R')
source('./helpers/fixest_settings.R')
df <- read_analysis_data() %>%
filter(between(tt, -6, 12)) %>%
mutate(treat = 1, month=month(ym(ymn), label = T))
library(dplyr)
library(fixest)
library(gridExtra)
library(lubridate)
source('./helpers/helpers.R')
source('./helpers/fixest_settings.R')
df <- read_analysis_data() %>%
filter(between(tt, -6, 12))
setFixest_fml(
..controls = ~month_income + month_spend + disc_spend + is_female + i(generation, "Boomers") + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
# Simple pre-post comparison
figname <- 'reg_pre_post.png'
m_stat_pp <- feols(netflows ~ t, df)
m_dynam_pp <- feols(netflows ~ i(tt, 0), df)
etable(m_stat_pp, m_dynam_pp)
figure(figname)
par(mfrow=c(1, 2))
fiplot(m_dynam_pp)
fcoefplot(m_stat_pp)
dev.off()
# Adding FEs
figname <- 'reg_twfe.png'
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
setFixest_fml(
..controls = ~month_income + month_spend + discret_spend + is_female + i(generation, "Boomers") + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
# Adding FEs
figname <- 'reg_twfe.png'
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
etable(m_stat_twfe)
etable(m_dynam_twfe)
figure(figname)
par(mfrow=c(1, 2))
fiplot(m_dynam_twfe)
fcoefplot(m_stat_twfe)
dev.off()
# Comparison plots
figname <- "reg_comparison.png"
figure(figname, height=2000, width=2000)
par(mfrow=c(2, 1))
fiplot(list(m_dynam_pp, m_dynam_twfe))
legend("topleft", col = c(1, 2, 4), pch = c(20, 15, 17),
legend = c("Pre-post", "Controls", "TWFE"))
# Decompose net-inflows
m_dynam_twfe_net <- feols(netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_in <- feols(inflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_out <- feols(outflows ~ i(tt, 0) + ..controls | ..fe, df)
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
# Decompose internal vs external margin
m_dynam_twfe_int <- feols(pos_netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_ext <- feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..fe, df)
fiplot(m_dynam_twfe_int)
fiplot(m_dynam_twfe_ext)
library(dplyr)
library(fixest)
library(gridExtra)
library(lubridate)
source('./helpers/helpers.R')
source('./helpers/fixest_settings.R')
df <- read_analysis_data() %>%
filter(between(tt, -6, 12))
setFixest_fml(
..controls = ~month_income + month_spend + discret_spend + is_female + i(generation, "Boomers") + region_code + num_accounts,
..fe = ~user_id + month,
..mvfe = ~mvsw(user_id, month)
)
# Simple pre-post comparison
figname <- 'reg_pre_post.png'
m_stat_pp <- feols(netflows ~ t, df)
m_dynam_pp <- feols(netflows ~ i(tt, 0), df)
etable(m_stat_pp, m_dynam_pp)
figure(figname)
par(mfrow=c(1, 2))
fiplot(m_dynam_pp)
fcoefplot(m_stat_pp)
dev.off()
# Adding FEs
figname <- 'reg_twfe.png'
m_stat_twfe <- feols(netflows ~ t + ..controls | ..mvfe, df)
m_dynam_twfe <- feols(netflows ~ i(tt, 0) + ..controls | ..mvfe, df)
etable(m_stat_twfe)
etable(m_dynam_twfe)
figure(figname)
par(mfrow=c(1, 2))
fiplot(m_dynam_twfe)
fcoefplot(m_stat_twfe)
dev.off()
fiplot(list(m_dynam_pp, m_dynam_twfe))
fiplot(m_dynam_twfe)
fiplot(m_dynam_pp)
fiplot(m_dynam_pp)
# Decompose net-inflows
m_dynam_twfe_net <- feols(netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_in <- feols(inflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_out <- feols(outflows ~ i(tt, 0) + ..controls | ..fe, df)
fiplot(list(m_dynam_twfe_net, m_dynam_twfe_in, m_dynam_twfe_out))
# Decompose internal vs external margin
m_dynam_twfe_int <- feols(pos_netflows ~ i(tt, 0) + ..controls | ..fe, df)
m_dynam_twfe_ext <- feols(has_pos_netflows ~ i(tt, 0) + ..controls | ..fe, df)
fiplot(m_dynam_twfe_int)
fiplot(m_dynam_twfe_ext)
library(dplyr)
library(ggplot2)
library(PanelMatch)
source('./src/helpers/helpers.R')
source('./src/figures/fig_settings.R')
df <- read_analysis_data()
library(dplyr)
library(ggplot2)
library(PanelMatch)
source('./src/helpers/helpers.R')
source('./helpers/helpers.R')
source('./figures/fig_settings.R')
source('./helpers/helpers.R')
library(dplyr)
library(ggplot2)
library(PanelMatch)
source('./helpers/helpers.R')
df <- read_analysis_data()
sample_size <- 200
dfs <- filter(df, user_id %in% sample(unique(user_id), sample_size))
DisplayTreatment(
data = dfs,
unit.id = "user_id",
time.id = "ymn",
treatment = "t",
legend.position = "bottom",
xlab = "Year-months",
ylab = "User",
legend.labels = c("Not using app (control)", "Using app (treatment)"),
title = ""
)
DisplayTreatment(
data = dfs,
unit.id = "user_id",
time.id = "ymn",
treatment = "t",
legend.position = "bottom",
xlab = "Year-months",
ylab = "User",
legend.labels = c("Not using app (control)", "Using app (treatment)"),
title = ""
) +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle=0, size=10)
) +
scale_y_discrete(breaks = xticks, labels = xlabs) +
guides(fill=guide_legend(title=""))
xticks <- c(201206, 201306, 201406, 201506, 201606, 201706, 201806, 201906, 202006)
xlabs <- c("2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020")
DisplayTreatment(
data = dfs,
unit.id = "user_id",
time.id = "ymn",
treatment = "t",
legend.position = "bottom",
xlab = "Year-months",
ylab = "User",
legend.labels = c("Not using app (control)", "Using app (treatment)"),
title = ""
) +
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_text(angle=0, size=10)
) +
scale_y_discrete(breaks = xticks, labels = xlabs) +
guides(fill=guide_legend(title=""))
ggsave(file.path(FIGDIR, 'treatplot_sample_raw.png'))
source('./config.R')
print(cwd())
getwd()

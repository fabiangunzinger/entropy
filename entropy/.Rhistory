'is_urban',
'month_income',
'has_regular_income',
'has_month_income',
'loan_repmt'
)
controls = c(fin_behav, planning, hh_chars)
setFixest_fml(
..entropy = c('entropy_tag_z', 'entropy_tag_sz')
)
# FE specifications
etable(
fixest::feols(xpd(
has_sa_inflows ~ + ..entropy + ..controls | csw0(user_id, month),
..controls = controls), data=dt
),
title = 'FE specifications',
# tex = T,
# file=file.path(TABDIR, 'reg_sw0.tex'),
fontsize = 'tiny',
label = 'tab:reg_fe',
replace = T,
order = c('!Entropy')
)
# FE specifications
etable(
fixest::feols(xpd(
has_sa_inflows ~ ..entropy + ..controls | csw0(user_id, month),
..controls = controls), data=dt
),
title = 'FE specifications',
# tex = T,
# file=file.path(TABDIR, 'reg_sw0.tex'),
fontsize = 'tiny',
label = 'tab:reg_fe',
replace = T,
order = c('!Entropy')
)
Sys.setenv(AWS_PROFILE='3di', AWS_DEFAULT_REGION='eu-west-2')
setwd('~/dev/projects/entropy/entropy/analysis')
source('helpers.R')
library(data.table)
library(estimatr)
library(glue)
library(fixest)
library(modelsummary)
library(plm)
library(purrr)
library(stargazer)
# Load data ------------------------------------------------------------------------
dt = read_analysis_data()
names(dt)
# Settings -------------------------------------------------------------------------
TABDIR = '/Users/fgu/dev/projects/entropy/output/tables'
# set fontsize of latex table produced by etable
set_font = function(x, fontsize){
if(missing(fontsize)) return(x)
dreamerr::check_arg_plus(fontsize, "match(tiny, scriptsize, footnotesize, small, normalsize, large, Large)")
x[x == "%start:tab\n"] = paste0("\\begin{", fontsize, "}")
x[x == "%end:tab\n"] = paste0("\\end{", fontsize, "}")
return(x)
}
setFixest_etable(postprocess.tex = set_font)
setFixest_etable(
se.below = T,
style.tex = style.tex(
"base"
)
)
setFixest_dict(c(
has_reg_sa_inflows = "Regular savings",
entropy_tag_z = "Entropy (tag-based)",
entropy_tag_sz = "Entropy (tag-based, smooth)",
entropy_tag_auto_z = "Entropy (auto-tag-based)",
entropy_tag_auto_sz = "Entropy (auto-tag-based, smooth)",
entropy_merchant_z = "Entropy (merchant-based)",
entropy_merchant_sz = "Entropy (merchant-based, smooth)",
user_id = 'User id',
month = 'Calendar month',
spend_communication = 'Spend communication',
spend_finance = 'Spend finance',
spend_hobbies = 'Spend hobbies',
spend_household = 'Spend household',
spend_other_spend = 'Spend other',
spend_motor = 'Spend motor',
spend_retail = 'Spend retail',
spend_services = 'Spend services',
spend_travel = 'Spend travel',
female = 'Female',
age = 'Age',
year_income = 'Year income'
))
muggleton_controls = c(
'spend_communication',
'spend_finance',
'spend_hobbies',
'spend_household',
'spend_other_spend',
'spend_motor',
'spend_retail',
'spend_services',
'spend_travel',
'female',
'age',
'year_income'
)
exog = list(
tag = c('entropy_tag_sz', 'entropy_tag_z'),
merchant = c('entropy_merchant_sz', 'entropy_merchant_z')
)
for (var in names(exog)) {
etable(
fixest::feols(xpd(
id ~ + sw(exog[[var]]) + ..controls | sw0(user_id + month),
..controls = muggleton_controls), data=dt
),
title = 'Muggleton et al. (2020) replication',
order = c('Entropy', '!(Intercept)'),
# tex = T,
# file=file.path(TABDIR, 'reg_muggleton2020_replication.tex'),
fontsize = 'normal',
label = glue('tab:muggleton2020_replication_{var}'),
replace = T
)
}
etable(
fixest::feols(xpd(
id ~ + sw(entropy_merchant_sz, entropy_merchant_z) + ..controls | sw0(user_id + month),
..controls = muggleton_controls), data=dt
),
title = 'Muggleton et al. (2020) replication',
order = c('Entropy', '!(Intercept)'),
# tex = T,
# file=file.path(TABDIR, 'reg_muggleton2020_replication.tex'),
fontsize = 'normal',
label = 'tab:muggleton2020_replication',
replace = T
)
exog = list(
tag = c('entropy_tag_sz', 'entropy_tag_z'),
merchant = c('entropy_merchant_sz', 'entropy_merchant_z')
)
for (var in names(exog)) {
etable(
fixest::feols(xpd(
id ~ + sw(exog[[var]]) + ..controls | sw0(user_id + month),
..controls = muggleton_controls), data=dt
),
title = 'Muggleton et al. (2020) replication',
order = c('Entropy', '!(Intercept)'),
# tex = T,
# file=file.path(TABDIR, 'reg_muggleton2020_replication.tex'),
fontsize = 'normal',
label = glue('tab:muggleton2020_replication_{var}'),
replace = T
)
}
etable(
fixest::feols(xpd(
id ~ + sw(entropy_tag_sz, entropy_tag_z) + ..controls | sw0(user_id + month),
..controls = muggleton_controls), data=dt
),
title = 'Muggleton et al. (2020) replication',
order = c('Entropy', '!(Intercept)'),
# tex = T,
# file=file.path(TABDIR, 'reg_muggleton2020_replication.tex'),
fontsize = 'normal',
label = 'tab:muggleton2020_replication',
replace = T
)
setwd('~/dev/projects/entropy/entropy/analysis')
source('helpers.R')
library(ggplot2)
library(patchwork)
FIGDIR = '/Users/fgu/dev/projects/entropy/output/figures'
dt = read_txn_data('X77')
head(dt)
dt = read_txn_data('777')
dt = read_txn_data(SAMPLE)
SAMPLE = '777'
dt = read_txn_data(SAMPLE)
head(dt)
source('~/dev/projects/entropy/entropy/analysis/sumstats.R', echo=TRUE)
library(stargazer)
stargazer(dt)
?stargazer
stargazer(
dt,
out = file.path(TABDIR, 'sumstats.tex')
)
stargazer(
dt,
type = 'html'
# out = file.path(TABDIR, 'sumstats.tex')
)
stargazer(
dt,
type = 'text'
# out = file.path(TABDIR, 'sumstats.tex')
)
head(dt)
dt[dt$is_sa_flow == 1 & !dt.debit]
dt[is_sa_flow == 1 & !debit]
dt[is_sa_flow == 1]
dt[is_sa_flow == 1 & !debit]
dt[is_sa_flow == 1 & debit == FALSE]
dt[is_sa_flow == 1 & debit == TRUE]
dt[(is_sa_flow == 1) & (debit == TRUE)]
dt[(is_sa_flow == 1) & (debit == FALSE)]
unique(dt$debit)
dt[(is_sa_flow == 1) & (debit == F)]
dt[ (debit == FALSE)]
dt[is_sa_flow == 1 & debit == FALSE]
dt[is_sa_flow == 1 & debit == 'FALSE']
dt[is_sa_flow == 1 & debit == TRUE]
setwd('~/dev/projects/entropy/entropy/analysis')
source('helpers.R')
library(ggplot2)
library(patchwork)
FIGDIR = '/Users/fgu/dev/projects/entropy/output/figures'
SAMPLE = '777'
dt = read_txn_data(SAMPLE)
head(dt)
type(dt$debit)
istype(dt$debit)
dt = read_txn_data(SAMPLE)
head(dt)
dt[is_sa_flow == 1 & debit == FALSE]
savings <- dt[is_sa_flow == 1 & debit == FALSE]
savings
savings
as.Date(savings$date)
month(as.Date(savings$date))
month(dmy(savings$date))
month(dmy(as.Date(savings$date)))
dmy(as.Date(savings$date))
ymd(savings$date)
library(lubridate)
ymd(savings$date)
dmy(savings$date)
ymd(savings$date)
savings$date
ymd_hms(savings$date)
month(ymd_hms(savings$date))
savings[, month := month(ymd_hms(savings$date))]
ggplot(savings) +
geom_bar(aes(month))
savings[, month := factor(month(ymd_hms(savings$date)))]
ggplot(savings) +
geom_bar(aes(month))
savings[, month := factor(month(ymd_hms(savings$date), label = T))]
ggplot(savings) +
geom_bar(aes(month))
savings[, month := factor(month(ymd_hms(savings$date), label = T, abbr = F))]
ggplot(savings) +
geom_bar(aes(month))
savings[, month := factor(month(ymd_hms(savings$date), label = T))]
ggplot(savings) +
geom_bar(aes(month))
savings[, month := factor(day(ymd_hms(savings$date)))]
savings[, day := factor(day(ymd_hms(savings$date)))]
savings[, month := factor(month(ymd_hms(savings$date), label = T))]
ggplot(savings) +
geom_bar(aes(day))
p1 + p2
p1 <- ggplot(savings) +
geom_bar(aes(month))
p2 <- ggplot(savings) +
geom_bar(aes(day))
p1 + p2
p1 + p2 & theme_minimal()
p1 <- ggplot(savings) +
geom_bar(aes(month)) +
labs(x = 'ho')
p1 + p2 & theme_minimal()
p2 <- ggplot(savings) +
geom_bar(aes(day)) +
labs(x = 'Day of month')
p1 <- ggplot(savings) +
geom_bar(aes(month)) +
labs(x = 'Month of year', y = 'Number of txns')
p1 <- ggplot(savings) +
geom_bar(aes(month)) +
labs(
x = 'Month of year',
y = 'Number of txns'
)
p2 <- ggplot(savings) +
geom_bar(aes(day)) +
labs(
x = 'Day of month',
y = 'Number of txns'
)
p1 + p2 & theme_minimal()
g <- ggplot(savings)
p1 <- g +
geom_bar(aes(month)) +
labs(
x = 'Month of year',
y = 'Number of txns'
)
p2 <- g +
geom_bar(aes(day)) +
labs(
x = 'Day of month',
y = 'Number of txns'
)
p3 <- ggplt(savings)
p3 <- g
p1 + p2 & theme_minimal()
p3 <- g +
geom_bar(amount)
g +
geom_bar(amount)
savings
g +
geom_bar(aes(amount))
savings
ggplot(savings$amount) +
geom_bar()
ggplot(savings) +
geom_bar(aes(amount))
savings[, count(amount), amount]
savings[, .N, amount]
savings[, .N, keyby=amount]
savings[, .N, keyby=amount][:4]
savings[, .N, keyby=amount][1:10]
savings[, .N, keyby=amount][-5:-1]
savings[, .N, keyby=amount][-5:-0]
savings[, .N, amount]
savings[, -.N, amount]
savings[, .N, amount]
savings[, .N, amount][-N]
savings[, .N, amount][,-N]
savings[, .N, amount][order(N)]
savings[, .N, amount][-order(N)]
savings[, .N, amount][order(-N)]
savings[, .N, amount][order(-N)][1:10]
savings[, .N, -amount][order(-N)][1:10]
ggplot(amounts) +
geom_bar(aes(amount))
amounts <- savings[, .N, -amount][order(-N)][1:10]
ggplot(amounts) +
geom_bar(aes(amount))
ggplot(amounts) +
geom_bar(aes(factor(amount)))
amounts
ggplot(savings) +
geom_bar(aes(factor(amount)))
ggplot(savings) +
geom_bar(aes(amount, N))
amounts <- savings[, .N, -amount][order(-N)][1:10]
ggplot(savings) +
geom_bar(aes(amount, N))
amounts
ggplot(amounts) +
geom_bar(aes(amount, N))
ggplot(amounts) +
geom_bar(aes(amount, N), stat = 'sum')
ggplot(amounts) +
geom_bar(aes(factor(amount), N), stat = 'sum')
ggplot(amounts) +
geom_bar(aes(factor(amount), N), stat = 'identity')
ggplot(amounts) +
geom_bar(aes(reorder(factor(amount)), N), stat = 'identity')
ggplot(amounts) +
geom_bar(aes(reorder(factor(amount), N), N), stat = 'identity')
ggplot(amounts) +
geom_bar(aes(reorder(factor(amount), -N), N), stat = 'identity')
ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), -N)), stat = 'identity')
ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), N)), stat = 'identity')
ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), N)), stat = 'identity') +
labs(
x = 'Number of txns',
y = 'Amount'
)
txns_label <- 'Number of transactions'
g <- ggplot(savings)
p1 <- g +
geom_bar(aes(month)) +
labs(
x = 'Month of year',
y = txns_label
)
savings[, day := factor(day(ymd_hms(savings$date)))]
p2 <- g +
geom_bar(aes(day)) +
labs(
x = 'Day of month',
y = txns_label
)
amounts <- savings[, .N, -amount][order(-N)][1:10]
ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), N)), stat = 'identity') +
labs(
x = txns_label,
y = 'Amount'
)
amounts
p1 + p2 + p3 & theme_minimal()
p1 + p2 + p3 & theme_minimal()
p3 <- ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), N)), stat = 'identity') +
labs(
x = txns_label,
y = 'Amount'
)
p1 + p2 + p3 & theme_minimal()
p1 + p2 / p3 & theme_minimal()
(p1 + p2) / p3 & theme_minimal()
p1 + p2 + p3 + plot_layout(ncol = 2)& theme_minimal()
p1 + p2 + p3 + plot_layout(ncol = 2) & theme_minimal()
savings
savings
savings <- dt[is_sa_flow == 1 & debit == FALSE, date := ymd_hms(date)]
savings$date
savings[, month := factor(month(date, label = T))]
savings[, month := factor(month(date, label = T))]
g <- ggplot(savings)
p1 <- g +
geom_bar(aes(month)) +
labs(
x = 'Month of year',
y = txns_label
)
savings[, day := factor(day(ymd_hms(savings$date)))]
p2 <- g +
geom_bar(aes(day)) +
labs(
x = 'Day of month',
y = txns_label
)
amounts <- savings[, .N, -amount][order(-N)][1:10]
p3 <- ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), N)), stat = 'identity') +
labs(
x = txns_label,
y = 'Amount'
)
p1 + p2 + p3 + plot_layout(ncol = 2) & theme_minimal()
dt = read_txn_data(SAMPLE)
head(dt)
savings <- dt[is_sa_flow == 1 & debit == FALSE, date := ymd_hms(date)]
head(savings)
month(savings$date)
library(fasttime)
install.packages('fasttime')
library(fasttime)
dt = read_txn_data(SAMPLE)
head(dt)
dt = read_txn_data(SAMPLE)
head(dt)
g <- ggplot(savings)
p1 <- g +
geom_bar(aes(factor(month(date, label = T)))) +
labs(
x = 'Month of year',
y = txns_label
)
p1
month(dt$date)
month(dt$date, label = T)
savings <- dt[is_sa_flow == 1 & debit == FALSE]
p1 <- g +
geom_bar(aes(month(date, label = T))) +
labs(
x = 'Month of year',
y = txns_label
)
p1
month(dt$date, label = T)
g <- ggplot(savings)
p1 <- g+
geom_bar(aes(month(date, label = T))) +
labs(
x = 'Month of year',
y = txns_label
)
p1
p2 <- g +
geom_bar(aes(day(date))) +
labs(
x = 'Day of month',
y = txns_label
)
amounts <- savings[, .N, -amount][order(-N)][1:10]
p3 <- ggplot(amounts) +
geom_bar(aes(N, reorder(factor(amount), N)), stat = 'identity') +
labs(
x = txns_label,
y = 'Amount'
)
p1 + p2 + p3 + plot_layout(ncol = 2) & theme_minimal()
savings
savings[, diff(date), user_id]
diff(savings$date)
savings[, difftime(date), user_id]
savings[, difftime(df$date), user_id]
savings[, diff := diff(df$date), user_id]
savings[, diff := diff(date), user_id]
diff(dt$date)
diff(dt$amount)
diff(dt$date)
?datediff
??datediff
?difftime
shift(dt$date)
savings[diff := shift(date), user_id]
savings[,diff := shift(date), user_id]

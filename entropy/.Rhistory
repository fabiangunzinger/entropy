s
chpos <- unique(s[max_past < min_future + c], by = 'user_id')
chneg <- unique(s[min_past > max_future + c], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
chneg
d <- d[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
dt[, month := rank(ym), user_id]
s <- dt[, .(user_id, month, sa_inflows)]
maxn <- function(x, n = 1) {
# returns nth largest element in x
Rfast::nth(x, n, descending = T)
}
minn <- function(x, n = 1) {
# returns nth smallest element in x
Rfast::nth(x, n, descending = F)
}
n = 1   # HO use 2
c = 0   # HO use 0.05 but for var in [-1, 1]
s[, max_past := shift(frollapply(sa_inflows, n = 12, align = 'right', maxn, n)), user_id]
s[, min_future := frollapply(sa_inflows, n = 12, align = 'left', minn, n), user_id]
s[, min_past := shift(frollapply(sa_inflows, n = 12, align = 'right', minn, n)), user_id]
s[, max_future := frollapply(sa_inflows, n = 12, align = 'left', maxn, n), user_id]
chpos <- unique(s[max_past < min_future + c], by = 'user_id')
chneg <- unique(s[min_past > max_future + c], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
chneg
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
dt[, month := rank(ym), user_id]
s <- dt[, .(user_id, month, sa_inflows)]
maxn <- function(x, n = 1) {
# returns nth largest element in x
Rfast::nth(x, n, descending = T)
}
minn <- function(x, n = 1) {
# returns nth smallest element in x
Rfast::nth(x, n, descending = F)
}
n = 1   # HO use 2
c = 10   # HO use 0.05 but for var in [-1, 1]
s[, max_past := shift(frollapply(sa_inflows, n = 12, align = 'right', maxn, n)), user_id]
s[, min_future := frollapply(sa_inflows, n = 12, align = 'left', minn, n), user_id]
s[, min_past := shift(frollapply(sa_inflows, n = 12, align = 'right', minn, n)), user_id]
s[, max_future := frollapply(sa_inflows, n = 12, align = 'left', maxn, n), user_id]
chpos <- unique(s[max_past < min_future + c], by = 'user_id')
chneg <- unique(s[min_past > max_future + c], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
chneg
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
chneg
s
s[min_future > max_past]
s[min_future > max_past + 50]
chpos <- unique(s[max_past < min_future + ..c], by = 'user_id')
c = 10   # HO use 0.05 but for var in [-1, 1]
chpos <- unique(s[max_past < min_future + ..c], by = 'user_id')
c = 0   # HO use 0.05 but for var in [-1, 1]
chpos <- unique(s[max_past < min_future], by = 'user_id')
chneg <- unique(s[min_past > max_future], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
chneg
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
chpos <- unique(s[max_past < min_future + 100], by = 'user_id')
chneg <- unique(s[min_past > max_future + 100], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
chneg
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
chneg
dt[, month := rank(ym), user_id]
s <- dt[, .(user_id, month, sa_inflows)]
maxn <- function(x, n = 1) {
# returns nth largest element in x
Rfast::nth(x, n, descending = T)
}
minn <- function(x, n = 1) {
# returns nth smallest element in x
Rfast::nth(x, n, descending = F)
}
n = 1   # HO use 2
c = 0   # HO use 0.05 but for var in [-1, 1]
s[, max_past := shift(frollapply(sa_inflows, n = 12, align = 'right', maxn, n)), user_id]
s[, min_future := frollapply(sa_inflows, n = 12, align = 'left', minn, n), user_id]
s[, min_past := shift(frollapply(sa_inflows, n = 12, align = 'right', minn, n)), user_id]
s[, max_future := frollapply(sa_inflows, n = 12, align = 'left', maxn, n), user_id]
chpos <- unique(s[max_past < min_future + 0], by = 'user_id')
chneg <- unique(s[min_past > max_future + 0], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
dt[, month := rank(ym), user_id]
s <- dt[, .(user_id, month, sa_inflows)]
maxn <- function(x, n = 1) {
# returns nth largest element in x
Rfast::nth(x, n, descending = T)
}
minn <- function(x, n = 1) {
# returns nth smallest element in x
Rfast::nth(x, n, descending = F)
}
n = 2   # HO use 2
c = 0   # HO use 0.05 but for var in [-1, 1]
s[, max_past := shift(frollapply(sa_inflows, n = 12, align = 'right', maxn, n)), user_id]
s[, min_future := frollapply(sa_inflows, n = 12, align = 'left', minn, n), user_id]
s[, min_past := shift(frollapply(sa_inflows, n = 12, align = 'right', minn, n)), user_id]
s[, max_future := frollapply(sa_inflows, n = 12, align = 'left', maxn, n), user_id]
chpos <- unique(s[max_past < min_future + 0], by = 'user_id')
chneg <- unique(s[min_past > max_future + 0], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 3, scales = 'free')
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 4, scales = 'free')
dt[, month := rank(ym), user_id]
s <- dt[, .(user_id, month, sa_inflows)]
maxn <- function(x, n = 1) {
# returns nth largest element in x
Rfast::nth(x, n, descending = T)
}
minn <- function(x, n = 1) {
# returns nth smallest element in x
Rfast::nth(x, n, descending = F)
}
n = 2   # HO use 2
c = 0   # HO use 0.05 but for var in [-1, 1]
wdw = 10   # HO use 12
s[, max_past := shift(frollapply(sa_inflows, n = wdw, align = 'right', maxn, n)), user_id]
s[, min_future := frollapply(sa_inflows, n = wdw, align = 'left', minn, n), user_id]
s[, min_past := shift(frollapply(sa_inflows, n = wdw, align = 'right', minn, n)), user_id]
s[, max_future := frollapply(sa_inflows, n = wdw, align = 'left', maxn, n), user_id]
chpos <- unique(s[max_past < min_future + 0], by = 'user_id')
chneg <- unique(s[min_past > max_future + 0], by = 'user_id')
changers <- rbind(chpos, chneg)[, .(user_id)]
d <- dt[changers, on = .(user_id)]
ggplot(d, aes(month, sa_inflows)) +
geom_line() +
facet_wrap(~user_id, ncol = 4, scales = 'free')
library(data.table)
library(estimatr)
library(gglm)
library(glue)
library(fixest)
library(modelsummary)
library(plm)
library(purrr)
library(stargazer)
source('helpers.R')
Sys.setenv(AWS_PROFILE='3di', AWS_DEFAULT_REGION='eu-west-2')
setwd('~/dev/projects/entropy/entropy/analysis')
TABDIR = '/Users/fgu/dev/projects/entropy/output/tables'
setFixest_etable(
postprocess.tex = set_font,
se.below = T,
digits = 3,
coefstat = 'confint',
style.tex = style.tex(
main = "base",
tpt = TRUE,
notes.tpt.intro = '\\footnotesize'
)
)
setFixest_dict(c(
has_reg_sa_inflows = "Regular savings",
# entropy_tag_z = "Entropy (tag-based)",
# entropy_tag_sz = "Entropy (tag-based, smooth)",
# entropy_tag_auto_z = "Entropy (auto-tag-based)",
# entropy_tag_auto_sz = "Entropy (auto-tag-based, smooth)",
# entropy_merchant_z = "Entropy (merchant-based)",
# entropy_merchant_sz = "Entropy (merchant-based, smooth)",
spend_communication = 'Spend communication',
spend_finance = 'Spend finance',
spend_hobbies = 'Spend hobbies',
spend_household = 'Spend household',
spend_other_spend = 'Spend other',
spend_motor = 'Spend motor',
spend_retail = 'Spend retail',
spend_services = 'Spend services',
spend_travel = 'Spend travel',
prop_credit = 'Credit spend',
month_spend = 'Month spend',
is_urban = 'Urban',
is_female = 'Female',
age = 'Age',
year_income = 'Year income',
month_income = 'Month income',
has_regular_income = 'Regular income',
has_month_income = 'Has income in month',
has_loan_repmt = 'Loan repayment',
has_pension = 'Pension',
has_benefits = 'Benefits',
user_id = 'User id',
ym = 'Calendar month'
))
dt = read_analysis_data()
names(dt)
# New ------------------------------------------------------------------------------
note <- "Notes: Spend and income variables are in \\pounds'000."
endogs = c('has_sa_inflows', 'sa_inflows', 'sa_netflows', 'sa_outflows')
cat_spends <- grep('spend_(?!month)', names(dt), value = T, perl = T)
controls = c(
# fin behaviour
'prop_credit',
'month_spend',
# planning - tbd
# hh / ind chars
'is_urban',
'month_income',
'has_month_income',
'income_variability',
'has_rent_payment',
'has_mortgage_payment',
'has_loan_repmt',
'has_benefits'
)
# by endog, only unsmoothed, fe and pooled together - smooth entropy
data <- dt[sa_inflows <= 3000 & sa_outflows <= 3000]
summary(data$prop_credit)
exog <- grep('entropy_.*_sz$', names(dt), value = T)
for (endog in endogs) {
print(
etable(
fixest::feols(xpd(.[endog] ~ sw(.[,exog]) + ..controls | sw0(user_id + ym),
..controls = controls), data=data),
title = glue('{endog} results'),
order = c('[Ee]ntropy', '!(Intercept)'),
notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{endog}_full_trunc.tex')),
label = glue('tab:reg_{endog}_smooth_full'),
replace = T
)
)
}
data <- dt[sa_inflows <= 3000 & sa_outflows <= 3000]
summary(data$prop_credit)
exog <- grep('entropy_.*_sz$', names(dt), value = T)
for (endog in endogs) {
print(
etable(
fixest::feols(xpd(.[endog] ~ sw(.[,exog]) + ..controls | sw0(user_id + ym),
..controls = controls), data=data),
title = glue('{endog} results'),
order = c('[Ee]ntropy', '!(Intercept)'),
notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{endog}_full_trunc_smooth.tex')),
# label = glue('tab:reg_{endog}_smooth_full'),
replace = T
)
)
}
data <- dt[sa_inflows <= 3000 & sa_outflows <= 3000]
summary(data$prop_credit)
# by endog, only unsmoothed, fe and pooled together
exog <- grep('entropy_.*_z$', names(dt), value = T)
for (endog in endogs) {
print(
etable(
fixest::feols(xpd(.[endog] ~ sw(.[,exog]) + ..controls | sw0(user_id + ym),
..controls = controls), data=data),
title = glue('{endog} results'),
order = c('[Ee]ntropy', '!(Intercept)'),
notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{endog}_full_trunc.tex')),
label = glue('tab:reg_{endog}_full'),
replace = T
)
)
}
names(dt)
?setFixest_dict
# effect of entropy components
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + mvsw(txn_count_ca, nunique_tag, ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
dtt <- read_final_users_data()
dt = read_analysis_data()
names(dt)
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + mvsw(txn_count_ca, nunique_tag, ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + mvsw(txn_count_ca, nunique_tag, ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
library(data.table)
library(estimatr)
library(gglm)
library(glue)
library(fixest)
library(modelsummary)
library(plm)
library(purrr)
library(stargazer)
source('helpers.R')
Sys.setenv(AWS_PROFILE='3di', AWS_DEFAULT_REGION='eu-west-2')
setwd('~/dev/projects/entropy/entropy/analysis')
TABDIR = '/Users/fgu/dev/projects/entropy/output/tables'
setFixest_etable(
postprocess.tex = set_font,
se.below = T,
digits = 3,
coefstat = 'confint',
style.tex = style.tex(
main = "base",
tpt = TRUE,
notes.tpt.intro = '\\footnotesize'
)
)
setFixest_dict(c(
has_reg_sa_inflows = "Regular savings",
entropy_tag_z = "Entropy (tag)",
entropy_tag_sz = "Entropy (tag, smooth)",
entropy_tag_auto_z = "Entropy (auto-tag)",
entropy_tag_auto_sz = "Entropy (auto-tag, smooth)",
entropy_merchant_z = "Entropy (merchant)",
entropy_merchant_sz = "Entropy (merchant, smooth)",
entropy_groc_z = "Entropy (grocery shop)",
entropy_groc_sz = "Entropy (grocery, smooth)",
spend_communication = 'Spend communication',
spend_finance = 'Spend finance',
spend_hobbies = 'Spend hobbies',
spend_household = 'Spend household',
spend_other_spend = 'Spend other',
spend_motor = 'Spend motor',
spend_retail = 'Spend retail',
spend_services = 'Spend services',
spend_travel = 'Spend travel',
prop_credit = "Credit spend",
month_spend = 'Month spend',
is_urban = 'Urban',
is_female = 'Female',
age = 'Age',
year_income = "Year income (£'000s)",
month_income = "Month income (£'000s)",
has_regular_income = 'Has regular income',
has_month_income = 'Has income in month',
has_loan_repmt = 'Loan repayment',
has_pension = 'Pension',
has_benefits = 'Benefits',
user_id = 'User id',
ym = 'Calendar month',
txn_count_ca = 'Current account txns',
nunique_tag = 'Unique spend categories'
))
dt = read_analysis_data()
names(dt)
# effect of entropy components
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + mvsw(txn_count_ca, nunique_tag, ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
controls = c(
# fin behaviour
'pct_credit',
'month_spend',
# planning - tbd
# hh / ind chars
'is_urban',
'month_income',
'has_month_income',
'income_variability',
'has_rent_payment',
'has_mortgage_payment',
'has_loan_repmt',
'has_benefits'
)
setFixest_dict(c(
has_reg_sa_inflows = "Regular savings",
entropy_tag_z = "Entropy (tag)",
entropy_tag_sz = "Entropy (tag, smooth)",
entropy_tag_auto_z = "Entropy (auto-tag)",
entropy_tag_auto_sz = "Entropy (auto-tag, smooth)",
entropy_merchant_z = "Entropy (merchant)",
entropy_merchant_sz = "Entropy (merchant, smooth)",
entropy_groc_z = "Entropy (grocery shop)",
entropy_groc_sz = "Entropy (grocery, smooth)",
spend_communication = 'Spend communication',
spend_finance = 'Spend finance',
spend_hobbies = 'Spend hobbies',
spend_household = 'Spend household',
spend_other_spend = 'Spend other',
spend_motor = 'Spend motor',
spend_retail = 'Spend retail',
spend_services = 'Spend services',
spend_travel = 'Spend travel',
pct_credit = "Paid with credit (%)",
month_spend = 'Month spend',
is_urban = 'Urban',
is_female = 'Female',
age = 'Age',
year_income = "Year income (£'000s)",
month_income = "Month income (£'000s)",
has_regular_income = 'Has regular income',
has_month_income = 'Has income in month',
has_loan_repmt = 'Loan repayment',
has_pension = 'Pension',
has_benefits = 'Benefits',
user_id = 'User id',
ym = 'Calendar month',
txn_count_ca = 'Current account txns',
nunique_tag = 'Unique spend categories'
))
# effect of entropy components
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + mvsw(txn_count_ca, nunique_tag, ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'scriptsize',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
# effect of entropy components
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + mvsw(txn_count_ca, nunique_tag, ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
# effect of entropy components
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + sw(txn_count_ca + nunique_tag + ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)
# effect of entropy components
etable(
fixest::feols(xpd(has_sa_inflows ~ entropy_tag_z + sw(txn_count_ca, nunique_tag, ssd_tag, txn_count_ca + nunique_tag + ssd_tag) + ..controls | user_id + ym, ..controls = controls), data=dt),
title = glue('{endog} results'),
order = c('[Ee]ntropy', 'txn', 'nunique'),
notes = c(note),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_entropy_explore.tex')),
label = glue('tab:reg_entropy_explore'),
replace = T
)

)
)
}
yvars <- c("has_inflows")
for (y in yvars) {
print(
etable(
fixest::feols(.[y] ~ entropy_tag_sz + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + nunique_tag + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
for (y in yvars) {
print(
etable(
fixest::feols(.[y] ~ entropy_tag_z + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_z + nunique_tag + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
for (y in yvars) {
print(
etable(
fixest::feols(.[y] ~ entropy_tag_z + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_z + nunique_tag + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + nunique_tag + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
for (y in yvars) {
print(
etable(
fixest::feols(.[y] ~ entropy_tag_z + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_z + nunique_tag + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + nunique_tag + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
fixest::feols(has_inflows ~ entropy_tag_z, df),
fixest::feols(has_inflows ~ entropy_tag_z, df),
fixest::feols(has_inflows ~ entropy_tag_z, df)
etable(
fixest::feols(has_inflows ~ entropy_tag_z, df)
)
etable(
fixest::feols(has_inflows ~ entropy_tag_z + [nuniques[entropy_tag_z]], df)
etable(
fixest::feols(has_inflows ~ entropy_tag_z + .[nuniques[entropy_tag_z]], df)
)
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nuniuqe_tag_spend",
"entropy_tag_spend_sz" = "nuniuqe_tag_spend",
"entropy_merchant_z" = "nuniuqe_merchant",
"entropy_merchant_sz" = "nuniuqe_merchant",
)
etable(
fixest::feols(has_inflows ~ entropy_tag_z + .[nuniques[entropy_tag_z]], df)
)
etable(
fixest::feols(has_inflows ~ entropy_tag_z + .[,nuniques[entropy_tag_z]], df)
)
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nuniuqe_tag_spend",
"entropy_tag_spend_sz" = "nuniuqe_tag_spend",
"entropy_merchant_z" = "nuniuqe_merchant",
"entropy_merchant_sz" = "nuniuqe_merchant",
)
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nuniuqe_tag_spend",
"entropy_tag_spend_sz" = "nuniuqe_tag_spend",
"entropy_merchant_z" = "nuniuqe_merchant",
"entropy_merchant_sz" = "nuniuqe_merchant"
)
etable(
fixest::feols(has_inflows ~ entropy_tag_z + .[nuniques[entropy_tag_z]], df)
)
etable(
fixest::feols(has_inflows ~ entropy_tag_z + .[nuniques['entropy_tag_z']], df)
)
entropy <- grep("entropy_tag_z", names(df), value = T)
entropy <- grep("entropy_tag_z", names(df), value = T)
for (e in entropy) {
etable(
fixest::feols(has_inflows ~ e + .[nuniques[e]], df)
)
}
etable(
fixest::feols(has_inflows ~ e, df)
)
entropy
etable(
fixest::feols(has_inflows ~ .[nuniques[e]], df)
)
for (e in entropy) {
etable(
fixest::feols(has_inflows ~ .[e] + .[nuniques[e]], df)
)
}
etable(
fixest::feols(has_inflows ~ .[e], df)
)
etable(
fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls, df)
)
etable(
fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
for (e in entropy) {
etable(
fixest::feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
for (e in entropy) {
etable(
fixest::feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
}
for (e in entropy) {
etable(
fixest::feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
# ,
# fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
}
for (y in yvars) {
print(
etable(
fixest::feols(.[y] ~ entropy_tag_z + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_z + nunique_tag + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + ..controls | user_id + ym, df),
fixest::feols(.[y] ~ entropy_tag_sz + nunique_tag + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
# ,
# fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
for (e in entropy) {
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
# ,
# fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
}
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
# ,
# fixest::feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
entropy <- grep("entropy_tag_z", names(df), value = T)
for (e in entropy) {
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
)
}
for (e in entropy) {
print(e)
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
)
}
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df)
)
)
}
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
entropy <- grep("entropy_tag_z$", names(df), value = T)
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
# Control for non-zero counts
grep('entropy_(tag|merchange).*(s)?z$', names(df), value = T)
# Control for non-zero counts
grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
grep("nunique", names(df), value = T)
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nunique_tag_spend",
"entropy_tag_spend_sz" = "nunique_tag_spend",
"entropy_merchant_z" = "nunique_merchant",
"entropy_merchant_sz" = "nunique_merchant",
)
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nunique_tag_spend",
"entropy_tag_spend_sz" = "nunique_tag_spend",
"entropy_merchant_z" = "nunique_merchant",
"entropy_merchant_sz" = "nunique_merchant",
)
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
library(data.table)
library(glue)
library(fixest)
library(tidyverse)
source('src/config.R')
source('src/helpers/helpers.R')
source('src/analysis/fixest_settings.R')
# Load data and add lagged entropy variables
df <- read_analysis_data("XX0") %>%
group_by(user_id) %>%
mutate(across(contains('entropy'), ~lag(.x, n=1), .names = "{.col}_lag"))
names(df)
setFixest_fml(
..endog = ~has_sa_inflows,
..comps = ~mvsw(entropy_tag_spend_z, avg_spend + nunique_tag_spend + std_tag_spend),
..controls = c(
# fin behaviour
# 'pct_credit',
'month_spend',
grep('^spend_', names(data), value = T),
# planning - tbd
# household / individual characteristics
# 'is_urban',
'month_income',
'has_month_income',
'income_var'
# 'has_rent_pmt',
# 'has_mortgage_pmt',
# 'loan_repmt',
# 'has_benefits'
),
..fe = ~user_id + ym
)
entropy_vars <- function(df) {
entropy_z <- grep('^entropy_.*_z$', names(df), value = T)
entropy_sz <- grep('^entropy_.*_sz$', names(df), value = T)
c(entropy_z, entropy_sz)
}
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nunique_tag_spend",
"entropy_tag_spend_sz" = "nunique_tag_spend",
"entropy_merchant_z" = "nunique_merchant",
"entropy_merchant_sz" = "nunique_merchant",
)
nuniques <- list(
"entropy_tag_z" = "nunique_tag",
"entropy_tag_sz" = "nunique_tag",
"entropy_tag_spend_z" = "nunique_tag_spend",
"entropy_tag_spend_sz" = "nunique_tag_spend",
"entropy_merchant_z" = "nunique_merchant",
"entropy_merchant_sz" = "nunique_merchant"
)
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
for (e in entropy) {
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
)
)
}
for (y in yvars) {
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df)
title = glue('Effect of entropy on {y}'),
for (y in yvars) {
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
yvars <- c("has_inflows", "has_pos_netflows", "inflows", "netflows", "investments", "dspend")
for (y in yvars) {
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
print(
etable(
feols(has_inflows ~ .[e] + ..controls | user_id + ym, df),
feols(has_inflows ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
for (y in yvars) {
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
print(
etable(
feols(.[y] ~ .[e] + ..controls | user_id + ym, df),
feols(.[y] ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
entropy
entropy_vars <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
for (y in yvars) {
for (e in entropy_vars) {
entropy <- grep('entropy_(tag|merchant).*(s)?z$', names(df), value = T)
print(
etable(
feols(.[y] ~ .[e] + ..controls | user_id + ym, df),
feols(.[y] ~ .[e] + .[nuniques[e]] + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)')
# ,
# tex = T,
# fontsize = 'tiny',
# file=file.path(TABDIR, glue('reg_{y}.tex')),
# label = glue('tab:reg_{y}'),
# replace = T
)
)
}
}
entropy_vars <- function(df) {
entropy_z <- grep('^entropy_(tag|merchant).*_z$', names(df), value = T)
entropy_sz <- grep('^entropy_(tag|merchant).*_sz$', names(df), value = T)
c(entropy_z, entropy_sz)
}
for (y in yvars) {
entropy <- entropy_vars(df)
print(
etable(
fixest::feols(.[y] ~ sw(.[,entropy]) + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)'),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{y}.tex')),
label = glue('tab:reg_{y}'),
replace = T
)
)
}
for (y in yvars) {
# Unsmoothed entropy
entropy <- sort(grep('entropy_(tag|merchant).*_z', names(df), value = T))
print(
etable(
fixest::feols(.[y] ~ sw(.[,entropy]) + ..controls | user_id + ym, df),
title = glue('Effect of lagged entropy on {y}'),
order = c('[Ee]ntropy'),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{y}_lagged_z.tex')),
label = glue('tab:reg_{y}_lagged_z'),
replace = T
)
)
# Smoothed entropy
entropy <- sort(grep('entropy_(tag|merchant).*_sz', names(df), value = T))
print(
etable(
fixest::feols(.[y] ~ sw(.[,entropy]) + ..controls | user_id + ym, df),
title = glue('Effect of lagged entropy on {y}'),
order = c('[Ee]ntropy'),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{y}_lagged_sz.tex')),
label = glue('tab:reg_{y}_lagged_sz'),
replace = T
)
)
}
# Load data and add lagged entropy variables
df <- read_analysis_data("XX0") %>%
group_by(user_id) %>%
mutate(across(contains('entropy'), ~lag(.x, n=1), .names = "{.col}_lag")) %>%
mutate(has_investments = ifelse(investments > 0, 1, 0))
yvars <- c("has_inflows", "inflows", "has_investments", "investments", "dspend")
entropy_vars <- function(df) {
entropy_z <- grep('^entropy_(tag|merchant).*_z$', names(df), value = T)
entropy_sz <- grep('^entropy_(tag|merchant).*_sz$', names(df), value = T)
c(entropy_z, entropy_sz)
}
for (y in yvars) {
entropy <- entropy_vars(df)
print(
etable(
fixest::feols(.[y] ~ sw(.[,entropy]) + ..controls | user_id + ym, df),
title = glue('Effect of entropy on {y}'),
order = c('[Ee]ntropy', '!(Intercept)'),
tex = T,
fontsize = 'tiny',
file=file.path(TABDIR, glue('reg_{y}.tex')),
label = glue('tab:reg_{y}'),
replace = T
)
)
}
source("~/dev/projects/entropy/entropy/analysis/analysis.R", echo=TRUE)
sort(grep('entropy_(tag|merchant).*_z', names(df), value = T))

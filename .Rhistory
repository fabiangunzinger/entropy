axis.title=element_text(size = 20),
axis.text = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = c(0.9, 0.9)
)
fn <- "year_income.png"
df %>%
filter(ymn == 201904) %>%
transmute(
yr_income = year_income * 1000,
source = 'APP'
) %>%
filter(ntile(yr_income, 100) <= 99) %>%
bind_rows(lcfs_data) %>%
ggplot() +
geom_density(aes(yr_income, color = source), alpha = 0.2) +
scale_x_continuous(labels = scales::comma) +
labs(x = 'Disposable income (£) in 2019', y = 'Density', color = "") +
theme(
axis.title=element_text(size = 20),
axis.text = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = c(0.9, 0.9)
)
ggsave(file.path(FIGDIR, fn), height = 2000, width = 3000, units = "px")
fn <- "year_spend.png"
df %>%
filter(ymn == 201904) %>%
transmute(
yr_spend = month_spend * 12 * 1000,
source = 'APP'
) %>%
filter(ntile(yr_spend, 100) <= 99) %>%
bind_rows(lcfs_data) %>%
ggplot() +
geom_density(aes(yr_spend, color = source), alpha = 0.2) +
scale_x_continuous(labels = scales::comma) +
labs(x = 'Total spend (£) in 2019', y = 'Density', color = "") +
coord_cartesian(xlim = c(0, 125000)) +
theme(
axis.title=element_text(size = 20),
axis.text = element_text(size = 20),
legend.text = element_text(size = 20),
legend.position = c(0.9, 0.9)
)
ggsave(file.path(FIGDIR, fn), height = 2000, width = 3000, units = "px")
fp <- "/Users/fgu/Dropbox/entropy_neil/entropy.parquet"
read_parquet <- function(fp) {
arrow::read_parquet(fp)
}
read_parquet(fp)
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- length(unique(df$user_id))
num_user_months <- nrow(df)
print(fn)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
read_parquet(fp)
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- length(unique(df$user_id))
num_user_months <- nrow(df)
print(fp)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
read_parquet(fp)
library(glue)
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- length(unique(df$user_id))
num_user_months <- nrow(df)
print(fp)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
read_parquet(fp)
d <- read_parquet(fp)
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- format(length(unique(df$user_id)), big.mark = ',')
num_user_months <- nrow(df)
print(fp)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
d <- read_parquet(fp)
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- format(length(unique(df$user_id)), big.mark = ',')
num_user_months <- format(nrow(df), big.mark = ',')
print(fp)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
d <- read_parquet(fp)
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- format(length(unique(df$user_id)), big.mark = ',')
num_user_months <- format(nrow(df), big.mark = ',')
print(fp)
print(fp, glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
d <- read_parquet(fp)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
read_parquet <- function(fp) {
df <- arrow::read_parquet(fp)
num_users <- format(length(unique(df$user_id)), big.mark = ',')
num_user_months <- format(nrow(df), big.mark = ',')
print(fp)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
d <- read_parquet(fp)
library(glue)
library(fixest)
library(tidyverse)
source('src/config.R')
source('src/helpers/helpers.R')
# Load data and add lagged entropy variables
df <- read_debug_data() %>%
group_by(user_id) %>%
mutate(
across(contains('entropy'), ~lag(.x, n=1), .names = "{.col}_lag"),
has_investments = ifelse(investments > 0, 1, 0),
dspend = dspend / 1000,
month_income_quint = ntile(month_income, 5),
income_var_quint = ntile(income_var, 5)
)
# Load data and add lagged entropy variables
df <- read_analysis_data() %>%
group_by(user_id) %>%
mutate(
across(contains('entropy'), ~lag(.x, n=1), .names = "{.col}_lag"),
has_investments = ifelse(investments > 0, 1, 0),
dspend = dspend / 1000,
month_income_quint = ntile(month_income, 5),
income_var_quint = ntile(income_var, 5)
)
# Load data and add lagged entropy variables
df <- read_analysis_data() %>%
group_by(user_id) %>%
mutate(
across(contains('entropy'), ~lag(.x, n=1), .names = "{.col}_lag"),
has_investments = ifelse(investments > 0, 1, 0),
dspend = dspend / 1000,
month_income_quint = ntile(month_income, 5),
income_var_quint = ntile(income_var, 5)
) %>%
ungroup()
read_analysis_data <- function(sample) {
fn <- if (!missing(sample)) glue('entropy_{sample}.parquet') else 'entropy.parquet'
fp <- file.path('s3://3di-project-entropy', fn)
df <- data.frame(aws.s3::s3read_using(arrow::read_parquet, object=fp))
num_users <- format(length(unique(df$user_id)), big.sep = ",")
num_user_months <- format(nrow(df), big.sep = ",")
print(fn)
print(glue('Users: {num_users}; User-months: {num_user_months}'))
return(df)
}
# Load data and add lagged entropy variables
df <- read_analysis_data() %>%
group_by(user_id) %>%
mutate(
across(contains('entropy'), ~lag(.x, n=1), .names = "{.col}_lag"),
has_investments = ifelse(investments > 0, 1, 0),
dspend = dspend / 1000,
month_income_quint = ntile(month_income, 5),
income_var_quint = ntile(income_var, 5)
) %>%
ungroup()
library(fixest)
library(tidyverse)
source('src/config.R')
source('src/helpers/helpers.R')
theme_set(theme_minimal())
df <- read_debug_data()
df %>%
sample_frac(1) %>%
group_by(x = entropy_tag_spend) %>%
summarise(y = mean(entropy_tag_spend_s)) %>%
ungroup() %>%
ggplot(aes(x, y)) +
geom_point(alpha = 0.3, colour = palette[[1]]) +
labs(x = varlabs[["entropy_tag_spend"]], y = varlabs[["entropy_tag_spend_s"]]) +
theme(
axis.title=element_text(size = 30),
axis.text = element_text(size = 30)
)
df %>%
sample_frac(0.001) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) %>%
geom_point()
df %>%
sample_frac(0.001) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
df %>%
sample_frac(0.01) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
df %>%
sample_frac(0.01) %>%
ggplot(aes(entropy_tag_z, entropy_tag_sz)) +
geom_point()
df %>%
sample_frac(0.01) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
df %>%
sample_frac(0.01) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point() +
facet_wrap(~nunique_tag)
df %>%
sample_frac(0.01) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
g <- df %>%
sample_frac(0.01) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
g
# Why is that? Because of the number of zero counts.
g + facet_wrap(~nunique_tag)
g <- df %>%
sample_frac(0.1) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
g
# Why is that? Because of the number of zero counts.
g + facet_wrap(~nunique_tag)
g <- df %>%
sample_frac(0.05) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point()
g <- df %>%
sample_frac(0.05) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point(alpha=0.5)
g
# Why is that? Because of the number of zero counts.
g + facet_wrap(~nunique_tag)
g <- df %>%
sample_frac(0.05) %>%
ggplot(aes(entropy_tag, entropy_tag_s))
g + geom_point(alpha=0.5)
g +
geom_point(colour = txns_count, alpha=0.5) +
facet_wrap(~nunique_tag)
g +
geom_point(colour = txns_count_spend, alpha=0.5) +
facet_wrap(~nunique_tag)
df %>%
sample_frac(0.05) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point(alpha=0.5)
g + facet_wrap(~nunique_tag)
g <- df %>%
sample_frac(0.05) %>%
ggplot(aes(entropy_tag, entropy_tag_s)) +
geom_point(alpha=0.5)
g + facet_wrap(~nunique_tag)
g + geom_point(aes(entropy_tag, entropy_tag_s), alpha=0.5)
g +
geom_point(aes(entropy_tag, entropy_tag_s), alpha=0.5) +
facet_wrap(~nunique_tag)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=txns_count_spend), alpha=0.5) +
facet_wrap(~nunique_tag)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(txns_count_spend)), alpha=0.5) +
facet_wrap(~nunique_tag)
?theme
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(txns_count_spend)), alpha=0.5) +
facet_wrap(~nunique_tag) +
theme(legend.position = NA)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(txns_count_spend)), alpha=0.5) +
facet_wrap(~nunique_tag) +
theme(legend.position = NULL)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(txns_count_spend)), alpha=0.5) +
facet_wrap(~nunique_tag) +
theme(legend.position = "none")
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(txns_count_spend)), alpha=0.2) +
facet_wrap(~nunique_tag) +
theme(legend.position = "none")
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag)), alpha=0.2) +
facet_wrap(~nunique_tag) +
theme(legend.position = "none")
g <- df %>%
sample_frac(0.05) %>%
mutate(std_tag_dec = ntile(std_tag, 10))
ggplot()
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag_dec)), alpha=0.2) +
facet_wrap(~nunique_tag)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag_dec)), alpha=0.2) +
facet_wrap(~nunique_tag)
g <- df %>%
sample_frac(0.05) %>%
mutate(std_tag_dec = ntile(std_tag, 10))
g <- df %>%
sample_frac(0.05) %>%
mutate(std_tag_dec = ntile(std_tag, 10)) %>%
ggplot()
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag_dec)), alpha=0.2) +
facet_wrap(~nunique_tag)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag_dec)), alpha=0.5) +
facet_wrap(~nunique_tag)
g <- df %>%
sample_frac(0.05) %>%
mutate(std_tag_q = ntile(std_tag, 5)) %>%
ggplot()
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag_dec)), alpha=0.5) +
facet_wrap(~nunique_tag)
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(std_tag_q)), alpha=0.5) +
facet_wrap(~nunique_tag)
df %>%
filter("^ct_tag_(?!spend)")
df %>%
select("^ct_tag_(?!spend)")
df %>%
select(matches("^ct_tag_(?!spend)"))
df %>%
select(matches("^ct_tag_(?!spend)", perl = T))
df %>%
select(matches("^ct_tag_", perl = T))
df %>%
select(matches("^ct_tag_*", perl = T))
df <- read_analyeis_data()
df <- read_analysis_data()
df %>%
select(matches("^ct_tag_(?!spend)", perl = T))
df %>%
mutate(across(matches("^ct_tag_(?!spend)", perl = T)), ~.x / txns_count_spend)
df %>%
mutate(across(matches("^ct_tag_(?!spend)", perl = T), ~.x / txns_count_spend))
df %>%
transmute(across(matches("^ct_tag_(?!spend)", perl = T), ~.x / txns_count_spend))
transmute(across(matches("^ct_tag_(?!spend)", perl = T), ~(.x + 1) / (txns_count_spend / 9))
df %>%
df %>%
transmute(across(matches("^ct_tag_(?!spend)", perl = T), ~(.x + 1) / (txns_count_spend + 9)))
df %>%
transmute(across(matches("^ct_tag_(?!spend)", perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "p_{col}"))
df %>%
mutate(across(matches("^ct_tag_(?!spend)", perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "p_{col}"))
g <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches("^ct_tag_(?!spend)", perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches("^ct_tag_(?!spend)", perl = T), ~.x / txns_count_spend, .names = "p_{col}")
) %>%
ggplot()
g
d <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches("^ct_tag_(?!spend)", perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches("^ct_tag_(?!spend)", perl = T), ~.x / txns_count_spend, .names = "p_{col}")
)
d
d %>%
select(matches("^ps?_"))
d %>%
select(matches("^ps?_")) %>%
pivot_longer()
d %>%
select(matches("^ps?_")) %>%
pivot_longer(everything())
d %>%
select(matches("^ps?_"))
d %>%
select(matches("^ps?_")) %>%
pivot_longer(everything())
pattern <- "^ct_tag_(?!spend)"
d <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(pattern, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches(pattern, perl = T), ~.x / txns_count_spend, .names = "p_{col}")
)
g <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(pattern, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches(pattern, perl = T), ~.x / txns_count_spend, .names = "p_{col}")
) %>%
ggplot()
p_smoothed <- ~(.x + 1) / (txns_count_spend + 9)
g <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(pattern, perl = T), p_smoothed, .names = "ps_{col}"),
across(matches(pattern, perl = T), ~.x / txns_count_spend, .names = "p_{col}")
) %>%
ggplot()
p_smoothed <- ~(.x + 1) / (txns_count_spend + 9)
g <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches(p, perl = T), ~.x / txns_count_spend, .names = "p_{col}")
) %>%
ggplot()
df %>%
sample_frac(0.05) %>%
transmute(
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"))
p <- "^ct_tag_(?!spend)"
df %>%
sample_frac(0.05) %>%
transmute(
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"))
df %>%
sample_frac(0.05) %>%
transmute(
sd(across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}")))
df %>%
sample_frac(0.05) %>%
transmute(
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"))
df %>%
sample_frac(0.05) %>%
transmute(
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}")) %>%
rowwise()
df %>%
sample_frac(0.05) %>%
rowwise() %>%
transmute(
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"))
df %>%
sample_frac(0.05) %>%
rowwise() %>%
transmute(
sd = sd(c_across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}")))
sd = sd(across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"))
df %>%
sample_frac(0.05) %>%
rowwise() %>%
transmute(across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"))
df %>%
sample_frac(0.05) %>%
rowwise() %>%
transmute(across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}")) %>%
mutate(sd = sd(c_across(starts_with("ps"))))
df %>%
sample_frac(0.05) %>%
rowwise() %>%
transmute(across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}")) %>%
transmute(sd = sd(c_across(starts_with("ps"))))
g <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches(p, perl = T), ~.x / txns_count_spend, .names = "p_{col}"),
ps_sd = sd(c_across(starts_with("ps_"))),
p_sd = sd(c_across(starts_with("p_"))),
) %>%
ggplot()
d <- df %>%
sample_frac(0.05) %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches(p, perl = T), ~.x / txns_count_spend, .names = "p_{col}"),
ps_sd = sd(c_across(starts_with("ps_"))),
p_sd = sd(c_across(starts_with("p_"))),
)
d
d %>%
ggplot(aes(p_sd, ps_sd)) +
geom_point()
d <- df %>%
sample_frac(0.05) %>%
rowwise() %>%
mutate(
std_tag_q = ntile(std_tag, 5),
across(matches(p, perl = T), ~(.x + 1) / (txns_count_spend + 9), .names = "ps_{col}"),
across(matches(p, perl = T), ~.x / txns_count_spend, .names = "p_{col}"),
ps_sd = sd(c_across(starts_with("ps_"))),
p_sd = sd(c_across(starts_with("p_"))),
)
d
d %>%
ggplot(aes(p_sd, ps_sd)) +
geom_point()
g <- d %>% ggplot()
g +
geom_point(aes(entropy_tag, entropy_tag_s, colour=factor(p_sd)), alpha=0.5) +
facet_wrap(~nunique_tag)
